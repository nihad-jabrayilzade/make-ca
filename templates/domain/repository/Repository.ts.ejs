import { <%= entity.pascalCase %>RepositoryPort } from "@core/domain/<%= entity.kebabCase %>/repository/<%= entity.pascalCase %>RepositoryPort";
import { <%= entity.pascalCase %>RepositoryResult } from "@core/domain/<%= entity.kebabCase %>/repository/<%= entity.pascalCase %>RepositoryResult";
import { <%= entity.pascalCase %> } from "@core/domain/<%= entity.kebabCase %>/entity";

export interface <%= entity.pascalCase %>Repository {
  get<%= entity.pascalCase %>(port: <%= entity.pascalCase %>RepositoryPort.Get): <%= entity.pascalCase %>RepositoryResult.Get;
  get<%= entity.pluralPascalCase %>(port: <%= entity.pascalCase %>RepositoryPort.GetMany): <%= entity.pascalCase %>RepositoryResult.GetMany;
  create<%= entity.pascalCase %>(port: <%= entity.pascalCase %>RepositoryPort.Create): <%= entity.pascalCase %>RepositoryResult.Create;
  update<%= entity.pascalCase %>(port: <%= entity.pascalCase %>RepositoryPort.Update): <%= entity.pascalCase %>RepositoryResult.Update;
  delete<%= entity.pascalCase %>(port: <%= entity.pascalCase %>RepositoryPort.Delete): <%= entity.pascalCase %>RepositoryResult.Delete;
  exists(port: <%= entity.pascalCase %>RepositoryPort.IsExists): <%= entity.pascalCase %>RepositoryResult.IsExists;
}
