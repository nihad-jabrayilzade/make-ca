export type Nullable<T> = T | null;

export type NotNullable<T> = T extends null ? never : T;

export type NumericString = `${number}` | number;

export type RequireAtLeastOne<T> = {
  [K in keyof T]-?: Required<Pick<T, K>> & Partial<Pick<T, Exclude<keyof T, K>>>;
}[keyof T];

export type Id = number;

export type TinyInt = 1 | 0;
