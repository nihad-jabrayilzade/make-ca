import { <%= entity.pascalCase %> } from "@core/domain/<%= entity.kebabCase %>/entity";
import { TypeOrm<%= entity.pascalCase %> } from "./TypeOrm<%= entity.pascalCase %>.entity";

export class TypeOrm<%= entity.pascalCase %>Mapper {
  public static toDomain(typeOrmEntity: TypeOrm<%= entity.pascalCase %>): <%= entity.pascalCase %> {
    if (!typeOrmEntity) {
      return null;
    }

    return new <%= entity.pascalCase %>({
      id: typeOrmEntity.id,
      createdAt: typeOrmEntity.createdAt,
      updatedAt: typeOrmEntity.updatedAt,
      deletedAt: typeOrmEntity.deletedAt,
    });
  }

  public static toDomainList(typeOrmEntities: TypeOrm<%= entity.pascalCase %>[]): <%= entity.pascalCase %>[] {
    return typeOrmEntities.map(typeOrmEntity => this.toDomain(typeOrmEntity));
  }

  public static toTypeOrm(domainEntity: <%= entity.pascalCase %>): Partial<TypeOrm<%= entity.pascalCase %>> {
    if (!domainEntity) {
      return null;
    }

    const typeOrmEntity = new TypeOrm<%= entity.pascalCase %>();
    
    // Add specific mapping if needed
    
    return typeOrmEntity;
  }
} 